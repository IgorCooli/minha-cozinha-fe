{"ast":null,"code":"import axios from 'axios';\nimport { getToken } from '../auth/AuthenticationService';\nconst findCustomersByName = async name => {\n  try {\n    axios.defaults.withCredentials = true;\n    const token = getToken();\n    const response = await axios.post('https://m3-be-cb08e7133205.herokuapp.com/api/customers',\n    // 'http://localhost:8080/api/customers',\n    name, {\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': token\n      }\n    });\n    return response;\n  } catch (error) {\n    if (error.response.status === 401) {\n      console.log('Token expired');\n      throw new Error('token.invalid_or_expired');\n    }\n    if (error.response.status !== 200) {\n      console.log('Search failed');\n      throw new Error('search.failed');\n    }\n    console.log(\"ERROR ON SERVICE: \" + error);\n    throw error;\n  }\n};\nexport { findCustomersByName };","map":{"version":3,"names":["axios","getToken","findCustomersByName","name","defaults","withCredentials","token","response","post","headers","error","status","console","log","Error"],"sources":["/home/igor/Projects/minha-cozinha-fe/src/service/findcustomer/FindCustomerService.js"],"sourcesContent":["import axios from 'axios';\nimport {getToken} from '../auth/AuthenticationService';\n\nconst findCustomersByName = async (name) => {\n    try {\n        axios.defaults.withCredentials = true;\n        const token = getToken();\n        const response = await axios.post(\n            'https://m3-be-cb08e7133205.herokuapp.com/api/customers',\n            // 'http://localhost:8080/api/customers',\n            name,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'authorization': token,\n                },\n            }\n        );\n        return response;\n    } catch (error) {\n        if (error.response.status === 401) {\n            console.log('Token expired');\n            throw new Error('token.invalid_or_expired');\n        }\n\n        if (error.response.status !== 200) {\n            console.log('Search failed');\n            throw new Error('search.failed');\n        }\n        console.log(\"ERROR ON SERVICE: \" + error)\n        throw error;\n    }\n\n};\n\nexport {findCustomersByName};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,+BAA+B;AAEtD,MAAMC,mBAAmB,GAAG,MAAOC,IAAI,IAAK;EACxC,IAAI;IACAH,KAAK,CAACI,QAAQ,CAACC,eAAe,GAAG,IAAI;IACrC,MAAMC,KAAK,GAAGL,QAAQ,CAAC,CAAC;IACxB,MAAMM,QAAQ,GAAG,MAAMP,KAAK,CAACQ,IAAI,CAC7B,wDAAwD;IACxD;IACAL,IAAI,EACJ;MACIM,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEH;MACrB;IACJ,CACJ,CAAC;IACD,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEA,IAAIJ,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACAF,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGH,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AAEJ,CAAC;AAED,SAAQR,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}