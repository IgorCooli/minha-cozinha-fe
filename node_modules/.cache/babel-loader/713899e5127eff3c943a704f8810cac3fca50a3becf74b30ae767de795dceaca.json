{"ast":null,"code":"// authService.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\nconst authenticate = async (username, password) => {\n  const response = await axios.post('https://m3-be-cb08e7133205.herokuapp.com/auth', {\n    //     const response = await axios.post('http://localhost:8080/auth', {\n    username: username,\n    password: password\n  });\n  if (response.status === 200 || response.status === 201) {\n    const token = response.data.token;\n    Cookies.set(\"x-token\", token, {\n      expires: 2 / 24\n    });\n    return token;\n  } else {\n    throw new Error('Wrong credentials');\n  }\n};\nconst logout = () => {\n  const domain = window.location.hostname;\n  //TODO no heroku nao está deletando o cookie... analisar\n  Cookies.remove(\"x-token\", {\n    path: '/',\n    domain\n  });\n};\nconst getToken = () => {\n  return Cookies.get('x-token');\n};\nexport { authenticate, logout, getToken };","map":{"version":3,"names":["axios","Cookies","authenticate","username","password","response","post","status","token","data","set","expires","Error","logout","domain","window","location","hostname","remove","path","getToken","get"],"sources":["/home/igor/Projects/minha-cozinha-fe/src/service/auth/AuthenticationService.js"],"sourcesContent":["// authService.js\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst authenticate = async (username, password) => {\n    const response = await axios.post('https://m3-be-cb08e7133205.herokuapp.com/auth', {\n    //     const response = await axios.post('http://localhost:8080/auth', {\n        username: username,\n        password: password,\n    });\n\n    if (response.status === 200 || response.status === 201) {\n        const token = response.data.token;\n        Cookies.set(\"x-token\", token, {expires: 2 / 24})\n        return token;\n    } else {\n        throw new Error('Wrong credentials');\n    }\n\n};\n\nconst logout = () => {\n    const domain = window.location.hostname;\n    //TODO no heroku nao está deletando o cookie... analisar\n    Cookies.remove(\"x-token\", { path: '/', domain });\n};\n\nconst getToken = () => {\n    return Cookies.get('x-token');\n};\n\nexport {authenticate, logout, getToken};\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAE/B,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC/C,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,+CAA+C,EAAE;IACnF;IACIH,QAAQ,EAAEA,QAAQ;IAClBC,QAAQ,EAAEA;EACd,CAAC,CAAC;EAEF,IAAIC,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAIF,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;IACpD,MAAMC,KAAK,GAAGH,QAAQ,CAACI,IAAI,CAACD,KAAK;IACjCP,OAAO,CAACS,GAAG,CAAC,SAAS,EAAEF,KAAK,EAAE;MAACG,OAAO,EAAE,CAAC,GAAG;IAAE,CAAC,CAAC;IAChD,OAAOH,KAAK;EAChB,CAAC,MAAM;IACH,MAAM,IAAII,KAAK,CAAC,mBAAmB,CAAC;EACxC;AAEJ,CAAC;AAED,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB,MAAMC,MAAM,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;EACvC;EACAhB,OAAO,CAACiB,MAAM,CAAC,SAAS,EAAE;IAAEC,IAAI,EAAE,GAAG;IAAEL;EAAO,CAAC,CAAC;AACpD,CAAC;AAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;EACnB,OAAOnB,OAAO,CAACoB,GAAG,CAAC,SAAS,CAAC;AACjC,CAAC;AAED,SAAQnB,YAAY,EAAEW,MAAM,EAAEO,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}