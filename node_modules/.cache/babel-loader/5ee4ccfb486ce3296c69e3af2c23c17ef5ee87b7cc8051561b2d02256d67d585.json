{"ast":null,"code":"import axios from \"axios\";\nconst findSales = async (years, month, query, page, size) => {\n  try {\n    axios.defaults.withCredentials = true;\n    const token = getToken();\n    return await axios.get(`https://m3-be-cb08e7133205.herokuapp.com/api/sales?year=${years}&month=${month}&page=${page}&size=${size}&query=${query}`,\n    // `http://localhost:8080/api/sales?year=${years}&month=${month}&page=${page}&size=${size}&query=${query}`,\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': token\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      console.log('Token expired');\n      throw new Error('token.invalid_or_expired');\n    }\n    if (error.response.status !== 200) {\n      console.log('Search failed');\n      throw new Error('search.failed');\n    }\n    console.log(\"ERROR ON SERVICE: \" + error);\n    throw error;\n  }\n};\nconst getSalesData = async () => {\n  try {\n    axios.defaults.withCredentials = true;\n    const token = getToken();\n    return await axios.get(`https://m3-be-cb08e7133205.herokuapp.com/api/sales-data`,\n    // 'http://localhost:8080/api/sales?page=${page}&size=${size}',\n    {\n      headers: {\n        'Content-Type': 'application/json',\n        'authorization': token\n      }\n    });\n  } catch (error) {\n    if (error.response.status === 401) {\n      console.log('Token expired');\n      throw new Error('token.invalid_or_expired');\n    }\n    if (error.response.status !== 200) {\n      console.log('Search failed');\n      throw new Error('search.failed');\n    }\n    console.log(\"ERROR ON SERVICE: \" + error);\n    throw error;\n  }\n};\nexport { findSales, getSalesData };","map":{"version":3,"names":["axios","findSales","years","month","query","page","size","defaults","withCredentials","token","getToken","get","headers","error","response","status","console","log","Error","getSalesData"],"sources":["/home/igor/Projects/minha-cozinha-fe/src/service/saleshistory/SalesHistoryService.js"],"sourcesContent":["import axios from \"axios\";\n\nconst findSales = async (years, month, query, page, size) => {\n    try {\n        axios.defaults.withCredentials = true;\n        const token = getToken();\n        return await axios.get(\n            `https://m3-be-cb08e7133205.herokuapp.com/api/sales?year=${years}&month=${month}&page=${page}&size=${size}&query=${query}`,\n            // `http://localhost:8080/api/sales?year=${years}&month=${month}&page=${page}&size=${size}&query=${query}`,\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'authorization': token,\n                },\n            }\n        );\n    } catch (error) {\n        if (error.response.status === 401) {\n            console.log('Token expired');\n            throw new Error('token.invalid_or_expired');\n        }\n\n        if (error.response.status !== 200) {\n            console.log('Search failed');\n            throw new Error('search.failed');\n        }\n        console.log(\"ERROR ON SERVICE: \" + error)\n        throw error;\n    }\n\n};\n\nconst getSalesData = async () => {\n    try {\n        axios.defaults.withCredentials = true;\n        const token = getToken();\n        return await axios.get(\n            `https://m3-be-cb08e7133205.herokuapp.com/api/sales-data`,\n            // 'http://localhost:8080/api/sales?page=${page}&size=${size}',\n            {\n                headers: {\n                    'Content-Type': 'application/json',\n                    'authorization': token,\n                },\n            }\n        );\n    } catch (error) {\n        if (error.response.status === 401) {\n            console.log('Token expired');\n            throw new Error('token.invalid_or_expired');\n        }\n\n        if (error.response.status !== 200) {\n            console.log('Search failed');\n            throw new Error('search.failed');\n        }\n        console.log(\"ERROR ON SERVICE: \" + error)\n        throw error;\n    }\n\n};\n\nexport {findSales, getSalesData};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,KAAK,EAAEC,KAAK,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACzD,IAAI;IACAN,KAAK,CAACO,QAAQ,CAACC,eAAe,GAAG,IAAI;IACrC,MAAMC,KAAK,GAAGC,QAAQ,CAAC,CAAC;IACxB,OAAO,MAAMV,KAAK,CAACW,GAAG,CACjB,2DAA0DT,KAAM,UAASC,KAAM,SAAQE,IAAK,SAAQC,IAAK,UAASF,KAAM,EAAC;IAC1H;IACA;MACIQ,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEH;MACrB;IACJ,CACJ,CAAC;EACL,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEA,IAAIL,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACAF,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGJ,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AAEJ,CAAC;AAED,MAAMM,YAAY,GAAG,MAAAA,CAAA,KAAY;EAC7B,IAAI;IACAnB,KAAK,CAACO,QAAQ,CAACC,eAAe,GAAG,IAAI;IACrC,MAAMC,KAAK,GAAGC,QAAQ,CAAC,CAAC;IACxB,OAAO,MAAMV,KAAK,CAACW,GAAG,CACjB,yDAAwD;IACzD;IACA;MACIC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAEH;MACrB;IACJ,CACJ,CAAC;EACL,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IAEA,IAAIL,KAAK,CAACC,QAAQ,CAACC,MAAM,KAAK,GAAG,EAAE;MAC/BC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;MAC5B,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;IACpC;IACAF,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGJ,KAAK,CAAC;IACzC,MAAMA,KAAK;EACf;AAEJ,CAAC;AAED,SAAQZ,SAAS,EAAEkB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}