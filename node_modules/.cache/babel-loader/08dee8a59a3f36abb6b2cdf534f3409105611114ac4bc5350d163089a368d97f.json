{"ast":null,"code":"var _jsxFileName = \"/home/igor/Projects/minha-cozinha-fe/src/components/registersale/RegisterSalePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Card, Col, Container, Form, Modal, Row, Table } from 'react-bootstrap';\nimport Select from 'react-select';\nimport { findCustomersByName } from '../../service/findcustomer/FindCustomerService';\nimport NavigationBar from '../navbar/NavigationBar';\nimport { useNavigate } from 'react-router-dom';\nimport { logout } from '../../service/auth/AuthenticationService';\nimport CustomerDto from '../../model/CustomerDto';\nimport { registerSale } from \"../../service/registersale/RegisterSaleService\";\nimport SaleDto from \"../../model/SaleDto\";\nimport ItemSaleDto from \"../../model/ItemSaleDto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterSalePage = () => {\n  _s();\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [customerList, setCustomerList] = useState([]);\n  const [selectedCustomer, setSelectedCustomer] = useState(null);\n  const [tableData, setTableData] = useState([]);\n  const [isTableVisible, setIsTableVisible] = useState(false);\n  const [totalValue, setTotalValue] = useState(0.0);\n  const [installments, setInstallments] = useState(1);\n  const [showAlert, setShowAlert] = useState(false);\n  const [valorInput, setValorInput] = useState('');\n  const [formattedDate, setFormattedDate] = useState(''); // Added for the formatted date\n  const navigate = useNavigate();\n  const [showSuccessModal, setShowSuccessModal] = useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [blankFieldsList, setBlankFieldsList] = useState([]);\n  const handleCloseAlert = () => setShowAlert(false);\n  const handleCustomersSearch = inputValue => {\n    findCustomersByName(inputValue).then(data => {\n      const rawList = data.data.customers;\n      const list = rawList.map(rawCustomer => ({\n        label: rawCustomer.name,\n        value: rawCustomer.phoneNumber\n      }));\n      setCustomerList(list);\n      if (list.length === 1) {\n        const firstCustomer = list[0];\n        const customerDto = new CustomerDto(firstCustomer.label, firstCustomer.value, 'Customer Preferences' // Replace with actual preferences\n        );\n\n        setSelectedCustomer(customerDto);\n      }\n    }).catch(error => {\n      console.error('Search failed', error);\n      if (error.message.includes('token.invalid_or_expired')) {\n        logout();\n        navigate('/');\n      }\n    });\n  };\n  const handleCustomerSelect = selectedOption => {\n    setSelectedOption(selectedOption);\n    if (selectedOption) {\n      const customerDto = new CustomerDto(selectedOption.label, selectedOption.value, 'Customer Preferences' // Replace with actual preferences\n      );\n\n      setSelectedCustomer(customerDto);\n    }\n  };\n  const validateFormFields = () => {\n    const missing = [];\n    if (!document.getElementById('formGridProduct').value) missing.push('Produto');\n    if (!document.getElementById('formGridData').value) missing.push('Data');\n    if (document.getElementById('formGridPaymentMethod').value === 'Selecione...') missing.push('Método de Pagamento');\n    if (isNaN(parseFloat(valorInput.replace(/[^\\d.]/g, '')))) missing.push('Valor');\n    return missing;\n  };\n\n  //INFO função para transformar em numerico antes de enviar valor\n  function getNumericValue() {\n    const cleanedValue = valorInput.replace(/[^\\d,]/g, '');\n    return parseFloat(cleanedValue.replace(',', '.'));\n  }\n  const handleAddToTable = () => {\n    let missing = validateFormFields();\n    if (missing.length > 0) {\n      setBlankFieldsList(missing);\n      setShowAlert(true);\n    } else {\n      const produto = document.getElementById('formGridProduct').value;\n      const data = document.getElementById('formGridData').value;\n      const pagamento = document.getElementById('formGridPaymentMethod').value;\n      console.log(valorInput);\n      const numericValue = getNumericValue(valorInput);\n      console.log(numericValue);\n      const newItem = {\n        produto,\n        data,\n        pagamento,\n        valor: numericValue\n      };\n      setTotalValue(totalValue + numericValue);\n      setTableData([...tableData, newItem]);\n      setIsTableVisible(true);\n\n      // Clear the form fields\n      document.getElementById('formGridProduct').value = '';\n      document.getElementById('formGridData').value = '';\n      document.getElementById('formGridPaymentMethod').value = 'Selecione...';\n      setValorInput('');\n      setFormattedDate('');\n    }\n  };\n  useEffect(() => {\n    if (valorInput) {\n      const numericValue = valorInput.replace(/[^\\d]/g, '');\n      if (numericValue.length >= 3) {\n        const wholePart = numericValue.slice(0, -2);\n        const decimalPart = numericValue.slice(-2);\n        const formattedValue = `R$${wholePart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')},${decimalPart}`;\n        setValorInput(formattedValue);\n      }\n    }\n  }, [valorInput]);\n  const handleDateChange = e => {\n    const input = e.target.value;\n    const numbersOnly = input.replace(/[^0-9]/g, '');\n    const formattedInput = numbersOnly.slice(0, 8).replace(/(\\d{2})(\\d{2})(\\d{4})/, '$1/$2/$3');\n    setFormattedDate(formattedInput);\n  };\n  const handleShowSuccessModal = () => setShowSuccessModal(true);\n  const showAlertModal = (message, fields = []) => {\n    setAlertMessage(message);\n    setBlankFieldsList(fields);\n    setShowAlert(true);\n  };\n  const showConfirmationAlertModal = (message, fields = []) => {\n    setAlertMessage(message);\n    setBlankFieldsList(fields);\n    setShowAlert(true);\n  };\n  const PaymentMethodEnum = {\n    Crédito: \"CREDIT\",\n    Débito: \"DEBIT\",\n    Dinheiro: \"MONEY\",\n    Pix: \"PIX\"\n  };\n  const translateTableDataToItemSaleDto = tableData => {\n    return tableData.map(item => {\n      const translatedPaymentMethod = PaymentMethodEnum[item.pagamento];\n      return new ItemSaleDto(item.produto, item.data, translatedPaymentMethod, item.valor);\n    });\n  };\n  const handleConfirmSale = () => {\n    const blankFields = [];\n    if (!selectedCustomer) {\n      blankFields.push('Customer');\n    }\n    if (tableData.length === 0) {\n      blankFields.push('Products');\n    }\n    if (blankFields.length > 0) {\n      showConfirmationAlertModal('Please fill in all required fields correctly', blankFields);\n    } else {\n      const translatedTableData = translateTableDataToItemSaleDto(tableData);\n      const data = new SaleDto(selectedCustomer.name, translatedTableData, installments);\n      registerSale(data).then(() => {\n        setTableData([]);\n        setIsTableVisible(false);\n        setTotalValue(0.0);\n        handleShowSuccessModal();\n      }).catch(error => {\n        if (error.message.includes(\"token.invalid_or_expired\")) {\n          logout();\n          navigate('/');\n        }\n        console.error('Registration failed', error);\n        showAlertModal(`Registration failed: ${error}`);\n      });\n    }\n  };\n  const handleRemoveFromTable = (index, item) => {\n    const updatedTableData = tableData.filter((_, i) => i !== index);\n    setTotalValue(totalValue - item.valor);\n    setTableData(updatedTableData);\n    setIsTableVisible(updatedTableData.length > 0);\n  };\n  const formatPhoneNumber = phoneNumber => {\n    if (phoneNumber && phoneNumber.length === 11) {\n      return `(${phoneNumber.substring(0, 2)}) ${phoneNumber.substring(2, 7)}-${phoneNumber.substring(7)}`;\n    } else {\n      return phoneNumber;\n    }\n  };\n  const registerSaleCardStyle = {\n    marginTop: '20px',\n    width: '100%'\n  };\n  const iconStyle = {\n    color: '#ffc107',\n    display: 'flex',\n    justifyContent: 'flex-end'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        style: registerSaleCardStyle,\n        className: \"text-left\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card.Title, {\n                style: {\n                  color: '#333333'\n                },\n                children: \"Nova venda\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: iconStyle,\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-coins\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridName\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Nome\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  value: selectedOption,\n                  onChange: handleCustomerSelect,\n                  onInputChange: handleCustomersSearch,\n                  options: customerList,\n                  isSearchable: true,\n                  placeholder: \"Pesquisar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Col,\n                controlId: \"formGridPhoneNumber\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Telefone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"tel\",\n                  name: \"phoneNumber\",\n                  value: selectedCustomer ? formatPhoneNumber(selectedCustomer.phoneNumber) : '',\n                  readOnly: true,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  controlId: \"formGridProduct\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Produto\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    id: \"formGridProduct\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridData\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Data\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    id: \"formGridData\",\n                    value: formattedDate,\n                    onChange: handleDateChange // Handle the date formatting\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                sm: 6,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridPaymentMethod\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Pagamento\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    defaultValue: \"Choose...\",\n                    id: \"formGridPaymentMethod\",\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Selecione...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 300,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Cr\\xE9dito\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 301,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"D\\xE9bito\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Dinheiro\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 303,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      children: \"Pix\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 299,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridValue\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Valor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    id: \"formGridValue\",\n                    value: valorInput,\n                    onChange: e => setValorInput(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                sm: 2,\n                children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                  as: Col,\n                  controlId: \"formGridInstallment\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Parcelas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                    value: installments,\n                    onChange: e => setInstallments(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 1,\n                      children: \"1 x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 326,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 2,\n                      children: \"2 x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 3,\n                      children: \"3 x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 4,\n                      children: \"4 x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 329,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: 5,\n                      children: \"5 x\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              className: \"justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"warning\",\n                  onClick: handleAddToTable,\n                  children: \"Adicionar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this), isTableVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Col,\n              controlId: \"formGridTotalValue\",\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: true,\n                  lg: \"2\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Label, {\n                    style: {\n                      fontWeight: 'bold',\n                      color: 'black'\n                    },\n                    children: \"Valor total da compra:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  md: \"auto\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    disabled: \"true\",\n                    type: \"text\",\n                    id: \"formGridTotalValue\",\n                    value: `R$ ${totalValue.toLocaleString('pt-BR', {\n                      minimumFractionDigits: 2\n                    })}`\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 354,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            hover: true,\n            responsive: true,\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Produto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Pagamento\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Valor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Remover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: tableData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"col-3\",\n                  children: item.produto\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"col-1\",\n                  children: item.data\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"col-2\",\n                  children: item.pagamento\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"col-2\",\n                  children: `R$ ${item.valor.toLocaleString('pt-BR', {\n                    minimumFractionDigits: 2\n                  })}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"col-1\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => handleRemoveFromTable(index, item),\n                    children: \"X\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 41\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: handleConfirmSale,\n                children: \"Confirmar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showAlert,\n        onHide: handleCloseAlert,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          className: \"bg-grey\",\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please fill in all fields correctly. The following fields are missing or invalid:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: blankFieldsList.map((field, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: field\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleCloseAlert,\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: showSuccessModal,\n        onHide: () => setShowSuccessModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          className: \"bg-grey\",\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Sucesso\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: \"Registrado com sucesso.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: () => setShowSuccessModal(false),\n            children: \"Ok\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterSalePage, \"KyndZu/SY7ApZbAUtyRkHmdI408=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterSalePage;\nexport default RegisterSalePage;\nvar _c;\n$RefreshReg$(_c, \"RegisterSalePage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Card","Col","Container","Form","Modal","Row","Table","Select","findCustomersByName","NavigationBar","useNavigate","logout","CustomerDto","registerSale","SaleDto","ItemSaleDto","jsxDEV","_jsxDEV","RegisterSalePage","_s","selectedOption","setSelectedOption","customerList","setCustomerList","selectedCustomer","setSelectedCustomer","tableData","setTableData","isTableVisible","setIsTableVisible","totalValue","setTotalValue","installments","setInstallments","showAlert","setShowAlert","valorInput","setValorInput","formattedDate","setFormattedDate","navigate","showSuccessModal","setShowSuccessModal","alertMessage","setAlertMessage","blankFieldsList","setBlankFieldsList","handleCloseAlert","handleCustomersSearch","inputValue","then","data","rawList","customers","list","map","rawCustomer","label","name","value","phoneNumber","length","firstCustomer","customerDto","catch","error","console","message","includes","handleCustomerSelect","validateFormFields","missing","document","getElementById","push","isNaN","parseFloat","replace","getNumericValue","cleanedValue","handleAddToTable","produto","pagamento","log","numericValue","newItem","valor","wholePart","slice","decimalPart","formattedValue","handleDateChange","e","input","target","numbersOnly","formattedInput","handleShowSuccessModal","showAlertModal","fields","showConfirmationAlertModal","PaymentMethodEnum","Crédito","Débito","Dinheiro","Pix","translateTableDataToItemSaleDto","item","translatedPaymentMethod","handleConfirmSale","blankFields","translatedTableData","handleRemoveFromTable","index","updatedTableData","filter","_","i","formatPhoneNumber","substring","registerSaleCardStyle","marginTop","width","iconStyle","color","display","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","Body","Title","Group","as","controlId","Label","onChange","onInputChange","options","isSearchable","placeholder","Control","type","readOnly","required","id","sm","defaultValue","variant","onClick","xs","lg","fontWeight","md","disabled","toLocaleString","minimumFractionDigits","striped","hover","responsive","show","onHide","Header","closeButton","field","Footer","_c","$RefreshReg$"],"sources":["/home/igor/Projects/minha-cozinha-fe/src/components/registersale/RegisterSalePage.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Button, Card, Col, Container, Form, Modal, Row, Table} from 'react-bootstrap';\nimport Select from 'react-select';\nimport {findCustomersByName} from '../../service/findcustomer/FindCustomerService';\nimport NavigationBar from '../navbar/NavigationBar';\nimport {useNavigate} from 'react-router-dom';\nimport {logout} from '../../service/auth/AuthenticationService';\nimport CustomerDto from '../../model/CustomerDto';\nimport {registerSale} from \"../../service/registersale/RegisterSaleService\";\nimport SaleDto from \"../../model/SaleDto\";\nimport ItemSaleDto from \"../../model/ItemSaleDto\";\n\nconst RegisterSalePage = () => {\n    const [selectedOption, setSelectedOption] = useState(null);\n    const [customerList, setCustomerList] = useState([]);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n    const [tableData, setTableData] = useState([]);\n    const [isTableVisible, setIsTableVisible] = useState(false);\n    const [totalValue, setTotalValue] = useState(0.0);\n    const [installments, setInstallments] = useState(1);\n    const [showAlert, setShowAlert] = useState(false);\n    const [valorInput, setValorInput] = useState('');\n    const [formattedDate, setFormattedDate] = useState(''); // Added for the formatted date\n    const navigate = useNavigate();\n    const [showSuccessModal, setShowSuccessModal] = useState(false);\n    const [alertMessage, setAlertMessage] = useState('');\n    const [blankFieldsList, setBlankFieldsList] = useState([]);\n\n    const handleCloseAlert = () => setShowAlert(false);\n\n    const handleCustomersSearch = (inputValue) => {\n        findCustomersByName(inputValue)\n            .then((data) => {\n                const rawList = data.data.customers;\n                const list = rawList.map((rawCustomer) => ({\n                    label: rawCustomer.name,\n                    value: rawCustomer.phoneNumber,\n                }));\n\n                setCustomerList(list);\n\n                if (list.length === 1) {\n                    const firstCustomer = list[0];\n                    const customerDto = new CustomerDto(\n                        firstCustomer.label,\n                        firstCustomer.value,\n                        'Customer Preferences' // Replace with actual preferences\n                    );\n\n                    setSelectedCustomer(customerDto);\n                }\n            })\n            .catch((error) => {\n                console.error('Search failed', error);\n                if (error.message.includes('token.invalid_or_expired')) {\n                    logout();\n                    navigate('/');\n                }\n            });\n    };\n\n    const handleCustomerSelect = (selectedOption) => {\n        setSelectedOption(selectedOption);\n\n        if (selectedOption) {\n            const customerDto = new CustomerDto(\n                selectedOption.label,\n                selectedOption.value,\n                'Customer Preferences' // Replace with actual preferences\n            );\n\n            setSelectedCustomer(customerDto);\n        }\n    };\n\n    const validateFormFields = () => {\n        const missing = [];\n        if (!document.getElementById('formGridProduct').value) missing.push('Produto');\n        if (!document.getElementById('formGridData').value) missing.push('Data');\n        if (document.getElementById('formGridPaymentMethod').value === 'Selecione...') missing.push('Método de Pagamento');\n        if (isNaN(parseFloat(valorInput.replace(/[^\\d.]/g, '')))) missing.push('Valor');\n        return missing;\n    };\n\n    //INFO função para transformar em numerico antes de enviar valor\n    function getNumericValue() {\n        const cleanedValue = valorInput.replace(/[^\\d,]/g, '');\n        return parseFloat(cleanedValue.replace(',', '.'));\n    }\n\n\n    const handleAddToTable = () => {\n        let missing = validateFormFields();\n\n        if (missing.length > 0) {\n            setBlankFieldsList(missing);\n            setShowAlert(true);\n        } else {\n            const produto = document.getElementById('formGridProduct').value;\n            const data = document.getElementById('formGridData').value;\n            const pagamento = document.getElementById('formGridPaymentMethod').value;\n\n            console.log(valorInput)\n\n            const numericValue = getNumericValue(valorInput);\n\n            console.log(numericValue)\n            const newItem = {produto, data, pagamento, valor: numericValue};\n\n            setTotalValue(totalValue + numericValue);\n            setTableData([...tableData, newItem]);\n            setIsTableVisible(true);\n\n            // Clear the form fields\n            document.getElementById('formGridProduct').value = '';\n            document.getElementById('formGridData').value = '';\n            document.getElementById('formGridPaymentMethod').value = 'Selecione...';\n            setValorInput('');\n            setFormattedDate('');\n        }\n    };\n\n    useEffect(() => {\n        if (valorInput) {\n            const numericValue = valorInput.replace(/[^\\d]/g, '');\n\n            if (numericValue.length >= 3) {\n                const wholePart = numericValue.slice(0, -2);\n                const decimalPart = numericValue.slice(-2);\n                const formattedValue = `R$${wholePart.replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')},${decimalPart}`;\n                setValorInput(formattedValue);\n            }\n        }\n    }, [valorInput]);\n\n    const handleDateChange = (e) => {\n        const input = e.target.value;\n        const numbersOnly = input.replace(/[^0-9]/g, '');\n        const formattedInput = numbersOnly\n            .slice(0, 8)\n            .replace(/(\\d{2})(\\d{2})(\\d{4})/, '$1/$2/$3');\n\n        setFormattedDate(formattedInput);\n    };\n\n    const handleShowSuccessModal = () => setShowSuccessModal(true);\n\n    const showAlertModal = (message, fields = []) => {\n        setAlertMessage(message);\n        setBlankFieldsList(fields);\n        setShowAlert(true);\n    };\n\n\n    const showConfirmationAlertModal = (message, fields = []) => {\n        setAlertMessage(message);\n        setBlankFieldsList(fields);\n        setShowAlert(true);\n    };\n\n    const PaymentMethodEnum = {\n        Crédito: \"CREDIT\",\n        Débito: \"DEBIT\",\n        Dinheiro: \"MONEY\",\n        Pix: \"PIX\",\n    };\n\n    const translateTableDataToItemSaleDto = (tableData) => {\n        return tableData.map((item) => {\n            const translatedPaymentMethod = PaymentMethodEnum[item.pagamento];\n            return new ItemSaleDto(item.produto, item.data, translatedPaymentMethod, item.valor);\n        });\n    };\n\n    const handleConfirmSale = () => {\n        const blankFields = [];\n\n        if (!selectedCustomer) {\n            blankFields.push('Customer');\n        }\n        if (tableData.length === 0) {\n            blankFields.push('Products');\n        }\n\n        if (blankFields.length > 0) {\n            showConfirmationAlertModal('Please fill in all required fields correctly', blankFields);\n        } else {\n            const translatedTableData = translateTableDataToItemSaleDto(tableData);\n\n            const data = new SaleDto(selectedCustomer.name, translatedTableData, installments);\n\n            registerSale(data)\n                .then(() => {\n                    setTableData([])\n                    setIsTableVisible(false)\n                    setTotalValue(0.0)\n                    handleShowSuccessModal();\n                })\n                .catch((error) => {\n                    if (error.message.includes(\"token.invalid_or_expired\")) {\n                        logout();\n                        navigate('/');\n                    }\n                    console.error('Registration failed', error);\n                    showAlertModal(`Registration failed: ${error}`);\n                });\n        }\n    };\n\n    const handleRemoveFromTable = (index, item) => {\n        const updatedTableData = tableData.filter((_, i) => i !== index);\n        setTotalValue(totalValue - item.valor);\n        setTableData(updatedTableData);\n        setIsTableVisible(updatedTableData.length > 0);\n    };\n\n    const formatPhoneNumber = (phoneNumber) => {\n        if (phoneNumber && phoneNumber.length === 11) {\n            return `(${phoneNumber.substring(0, 2)}) ${phoneNumber.substring(2, 7)}-${phoneNumber.substring(7)}`;\n        } else {\n            return phoneNumber;\n        }\n    };\n\n    const registerSaleCardStyle = {\n        marginTop: '20px',\n        width: '100%',\n    };\n\n    const iconStyle = {\n        color: '#ffc107',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    };\n\n    return (\n        <div>\n            <NavigationBar/>\n            <Container className=\"mt-4\">\n                <Card style={registerSaleCardStyle} className=\"text-left\">\n                    <Card.Body>\n                        <Row>\n                            <Col>\n                                <Card.Title style={{color: '#333333'}}>Nova venda</Card.Title>\n                            </Col>\n                            <Col>\n                                <div style={iconStyle}>\n                                    <i className=\"fa-solid fa-coins\"></i>\n                                </div>\n                            </Col>\n                        </Row>\n                        <Form>\n                            <Row className=\"mb-3\">\n                                <Form.Group as={Col} controlId=\"formGridName\">\n                                    <Form.Label>Nome</Form.Label>\n                                    <Select\n                                        value={selectedOption}\n                                        onChange={handleCustomerSelect}\n                                        onInputChange={handleCustomersSearch}\n                                        options={customerList}\n                                        isSearchable={true}\n                                        placeholder=\"Pesquisar\"\n                                    />\n                                </Form.Group>\n                                <Form.Group as={Col} controlId=\"formGridPhoneNumber\">\n                                    <Form.Label>Telefone</Form.Label>\n                                    <Form.Control\n                                        type=\"tel\"\n                                        name=\"phoneNumber\"\n                                        value={selectedCustomer ? formatPhoneNumber(selectedCustomer.phoneNumber) : ''}\n                                        readOnly\n                                        required\n                                    />\n                                </Form.Group>\n                            </Row>\n                            <Row>\n                                <Col>\n                                    <Form.Group className=\"mb-3\" controlId=\"formGridProduct\">\n                                        <Form.Label>Produto</Form.Label>\n                                        <Form.Control type=\"text\" id=\"formGridProduct\"/>\n                                    </Form.Group>\n                                </Col>\n                                <Col>\n                                    <Form.Group as={Col} controlId=\"formGridData\">\n                                        <Form.Label>Data</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            id=\"formGridData\"\n                                            value={formattedDate}\n                                            onChange={handleDateChange} // Handle the date formatting\n                                        />\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row className=\"mb-3\">\n                                <Col sm={6}>\n                                    <Form.Group as={Col} controlId=\"formGridPaymentMethod\">\n                                        <Form.Label>Pagamento</Form.Label>\n                                        <Form.Select defaultValue=\"Choose...\" id=\"formGridPaymentMethod\">\n                                            <option>Selecione...</option>\n                                            <option>Crédito</option>\n                                            <option>Débito</option>\n                                            <option>Dinheiro</option>\n                                            <option>Pix</option>\n                                        </Form.Select>\n                                    </Form.Group>\n                                </Col>\n                                <Col sm={4}>\n                                    <Form.Group as={Col} controlId=\"formGridValue\">\n                                        <Form.Label>Valor</Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            id=\"formGridValue\"\n                                            value={valorInput}\n                                            onChange={(e) => setValorInput(e.target.value)}\n                                        />\n                                    </Form.Group>\n                                </Col>\n                                <Col sm={2}>\n                                    <Form.Group as={Col} controlId=\"formGridInstallment\">\n                                        <Form.Label>Parcelas</Form.Label>\n                                        <Form.Select\n                                            value={installments}\n                                            onChange={(e) => setInstallments(e.target.value)}\n                                        >\n                                            <option value={1}>1 x</option>\n                                            <option value={2}>2 x</option>\n                                            <option value={3}>3 x</option>\n                                            <option value={4}>4 x</option>\n                                            <option value={5}>5 x</option>\n                                        </Form.Select>\n                                    </Form.Group>\n                                </Col>\n                            </Row>\n                            <Row className=\"justify-content-center\">\n                                <div className=\"text-center\">\n                                    <Button variant=\"warning\" onClick={handleAddToTable}>\n                                        Adicionar\n                                    </Button>\n                                </div>\n                            </Row>\n                        </Form>\n                    </Card.Body>\n                    {isTableVisible && (\n                        <div>\n                            <Card.Body>\n                                <Form.Group as={Col} controlId=\"formGridTotalValue\">\n                                    <Row className=\"justify-content-md-center\">\n                                        <Col xs lg=\"2\">\n                                            <Form.Label style={{fontWeight: 'bold', color: 'black'}}>Valor total da\n                                                compra:</Form.Label>\n                                        </Col>\n                                        <Col md=\"auto\">\n                                            <Form.Control\n                                                disabled=\"true\"\n                                                type=\"text\"\n                                                id=\"formGridTotalValue\"\n                                                value={`R$ ${totalValue.toLocaleString('pt-BR', {minimumFractionDigits: 2})}`}\n                                            />\n                                        </Col>\n                                    </Row>\n                                </Form.Group>\n                            </Card.Body>\n                            <Table striped hover responsive className={\"text-center\"}>\n                                <thead>\n                                <tr>\n                                    <th>Produto</th>\n                                    <th>Data</th>\n                                    <th>Pagamento</th>\n                                    <th>Valor</th>\n                                    <th>Remover</th>\n                                </tr>\n                                </thead>\n                                <tbody>\n                                {tableData.map((item, index) => (\n                                    <tr key={index}>\n                                        <td className=\"col-3\">{item.produto}</td>\n                                        <td className=\"col-1\">{item.data}</td>\n                                        <td className=\"col-2\">{item.pagamento}</td>\n                                        <td className=\"col-2\">{`R$ ${item.valor.toLocaleString('pt-BR', {minimumFractionDigits: 2})}`}</td>\n                                        <td className=\"col-1\">\n                                            <Button variant=\"danger\"\n                                                    onClick={() => handleRemoveFromTable(index, item)}>\n                                                X\n                                            </Button>\n                                        </td>\n                                    </tr>\n                                ))}\n                                </tbody>\n                            </Table>\n                            <Row className=\"justify-content-center\">\n                                <div className=\"text-center\">\n                                    <Button\n                                        variant={\"success\"}\n                                        onClick={handleConfirmSale}\n                                    >\n                                        Confirmar\n                                    </Button>\n                                </div>\n                            </Row>\n                        </div>\n                    )}\n                </Card>\n                <Modal show={showAlert} onHide={handleCloseAlert}>\n                    <Modal.Header closeButton className=\"bg-grey\">\n                        <Modal.Title>Error</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>Please fill in all fields correctly. The following fields are missing or invalid:</p>\n                        <ul>\n                            {blankFieldsList.map((field, index) => (\n                                <li key={index}>{field}</li>\n                            ))}\n                        </ul>\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={handleCloseAlert}>\n                            Ok\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n                <Modal show={showSuccessModal} onHide={() => setShowSuccessModal(false)}>\n                    <Modal.Header closeButton className=\"bg-grey\">\n                        <Modal.Title>Sucesso</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        Registrado com sucesso.\n                    </Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"primary\" onClick={() => setShowSuccessModal(false)}>\n                            Ok\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </Container>\n        </div>\n    );\n};\n\nexport default RegisterSalePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}